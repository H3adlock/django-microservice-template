.. {{ project_name }} documentation master file, created by
   sphinx-quickstart on Tue Dec 29 19:06:20 2015.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

For developers
=========================================

Installation
************

Below is description how to use it in local development. On staging environment and production.

Local development
----------------- 

All what you need is to have `Docker Engine <https://docs.docker.com/>`_ and `Docker Compose <https://docs.docker.com/>`_   installed on your OS.
Current version of {{ project_name }} (1.0.1) was tested with Docker Engine 1.10.1 and Docker Compose 1.8

To build base image for django applications (this will take a while)::

    make build-base

To build all needed containers and make them up and running::

    make run

* `Admin page <http://127.0.0.1/admin/>`_ 
* `Documentation <http://127.0.0.1/docs/>`_

You can also run basic SBE test::

    make sbe


Staging / integration environment
---------------------------------

TODO


Production
----------

TODO

Developing changes
******************

When all docker containers are up and running, what can be checked by runing::

	docker ps

You should see containers with names::
  
  {{ project_name }}-db
  {{ project_name }}-web
  {{ project_name }}-https
  {{ project_name }}-testing

To stop all containers::

  docker-compose down

Changes in web are dynamically reloading
to reload https container run::

   docker-compose build https
   docker-compose up --no-deps -d https

to recreate base container run::

   docker-compose down
   make rmi-base
   make build-base

to reload changes in docs run::

   cd docs
   make html

Shortcuts
*********

If you are lazy (like we are) you can take look into Makefile and use some shortcuts like::

  make clean-apps

to stop and remove all containers and images build by docker-compose.
To clean up images and containers used for {{ project_name }}/base run ::

  make clean-all

If you just run ::

  make

it will build and start all you need to have working {{ project_name }}.

Logs
----

Logs from django, nginx and gunicorn are write to /opt/{{ project_name }}/logs folder. You can access them by::

    make logs-web

Docker shell
------------

To easily open shell for conteiners you can use::

    make shell-web


Troubleshooting
***************

When you will notice any network related problems (like being unable to reach internet during images building or from a built container; very slow network response within containers' network), check if in file on host machine::

  /etc/default/docker

You have uncommented::

  DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4"

After that don't forget to restart docker-engine servie. For Ubuntu::

  sudo service docker restart


Testing
*******

BDD / SBE
---------

BDD is done with `behave <http://pythonhosted.org/behave/>`_. Steps should use only exposed REST API to make it technology agnostic.

To run SBE tests ::

    make sbe


Production
**********

to run on production use command::

    make run-prod

Documentation
*************

Generated by `Sphinx <http://sphinx-doc.org/>`_ with useg of `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_.

If you change documentation (docs/source folder) you can rebuild it in container by ::

  make build-docs


.. toctree::
   :maxdepth: 2



