version: '2'

services:

  logs:
      image: "{{ project_name }}-logs:1.0.1"
      container_name: {{ project_name }}-logs
      build:
        context: ./logs
        dockerfile: Dockerfile
      labels:
        application: "{{ project_name }}-logs"
      environment:
        LOGSPOUT: ignore
      ports:
        - "5601:5601"
        - "9200:9200"
        - "5000:5000"

  logs-logspout:
      image: gliderlabs/logspout
      container_name: {{ project_name }}-logspout
      labels:
        application: "{{ project_name }}-logspout"
      depends_on:
        - logs
      links:
        - logs
      environment:
        DEBUG: "true"
        LOGSPOUT: ignore
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      command: syslog://logs:5000

  web-logs:
    image: "{{ project_name }}/logs-data:1.0.1"
    container_name: "{{ project_name }}-web-logs"
    labels:
      application: "{{ project_name }}-web-logs"
    volumes:
      - /opt/{{ project_name }}/logs/web
    command: /bin/true

  web:
    env_file: env
    container_name: "{{ project_name }}-web"
    image: "{{ project_name }}-web:1.0.1"
    build: 
      context: ./{{ project_name }}-web
      dockerfile: Dockerfile-web
    labels:
      application: "{{ project_name }}-web"
    volumes:
      - /opt/{{ project_name }}/static
    volumes_from:
      - web-logs
    expose:
      - "8000"
    depends_on:
      - db
      - logs
      - web-logs

  db:
    image: "{{ project_name }}-db:1.0.1"
    container_name: "{{ project_name }}-db"
    build:
      context: ./db
      dockerfile: Dockerfile-db
    labels:
      application: "{{ project_name }}-db"
    expose:
      - "5432"
    volumes_from:
      - data

  data:
    image: "{{ project_name }}-data:1.0.1"
    container_name: "{{ project_name }}-data"
    labels:
      application: "{{ project_name }}-data"
    build:
      context: ./db
      dockerfile: Dockerfile-data
    volumes:
      - /var/lib/postgresql
    command: /bin/true

  https-logs:
    image: "{{ project_name }}/logs-data:1.0.1"
    container_name: "{{ project_name }}-https-logs"
    labels:
      application: "{{ project_name }}-https-logs"
    volumes:
      - /opt/{{ project_name }}/logs/https
    command: /bin/true

  https:
    container_name: "{{ project_name }}-https"
    image: "{{ project_name }}-https:1.0.1"
    build:
      context: ./https
      dockerfile: Dockerfile-https
    volumes_from:
      - https-logs
    ports:
      - "80:80"
    labels:
      application: "{{ project_name }}-https"
    depends_on:
      - web
      - https-logs
    command: bash entry-point.sh

  testing:
    container_name: "{{ project_name }}-testing"
    image: "{{ project_name }}-testing:1.0.1"
    build:
      context: ./testing
      dockerfile: Dockerfile-testing
    links:
      - logs
    command: when-changed -r /opt/{{ project_name }}/{{ project_name }}-testing behave
